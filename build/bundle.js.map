{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../node_modules/svelte-spa-router/Router.svelte","../../node_modules/regexparam/dist/regexparam.mjs","../../src/gamelogic/utils.ts","../../node_modules/lz-string/libs/lz-string.js","../../src/gamelogic/saveloadfunctions.ts","../../src/gamelogic/gamemodel.ts","../../src/gamelogic/moneybutton.ts","../../src/gamelogic/upgrades.ts","../../src/components/MoneyButton.svelte","../../src/components/Generator.svelte","../../src/components/GeneratorList.svelte","../../src/routes/Home.svelte","../../src/gamelogic/notifications.ts","../../src/gamelogic/gameloop.ts","../../src/routes/Options.svelte","../../node_modules/svelte/easing/index.mjs","../../node_modules/svelte/transition/index.mjs","../../node_modules/svelte/animate/index.mjs","../../src/components/Notifications.svelte","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.31.2' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","<script context=\"module\">\nimport {readable, derived} from 'svelte/store'\nimport {tick} from 'svelte'\nimport {wrap as _wrap} from './wrap'\n\n/**\n * Wraps a component to add route pre-conditions.\n * @deprecated Use `wrap` from `svelte-spa-router/wrap` instead. This function will be removed in a later version.\n * \n * @param {SvelteComponent} component - Svelte component for the route\n * @param {object} [userData] - Optional object that will be passed to each `conditionsFailed` event\n * @param {...function(RouteDetail): boolean} conditions - Route pre-conditions to add, which will be executed in order\n * @returns {WrappedComponent} Wrapped component\n */\nexport function wrap(component, userData, ...conditions) {\n    // Use the new wrap method and show a deprecation warning\n    // eslint-disable-next-line no-console\n    console.warn('Method `wrap` from `svelte-spa-router` is deprecated and will be removed in a future version. Please use `svelte-spa-router/wrap` instead. See http://bit.ly/svelte-spa-router-upgrading')\n    return _wrap({\n        component,\n        userData,\n        conditions\n    })\n}\n\n/**\n * @typedef {Object} Location\n * @property {string} location - Location (page/view), for example `/book`\n * @property {string} [querystring] - Querystring from the hash, as a string not parsed\n */\n/**\n * Returns the current location from the hash.\n *\n * @returns {Location} Location object\n * @private\n */\nfunction getLocation() {\n    const hashPosition = window.location.href.indexOf('#/')\n    let location = (hashPosition > -1) ? window.location.href.substr(hashPosition + 1) : '/'\n\n    // Check if there's a querystring\n    const qsPosition = location.indexOf('?')\n    let querystring = ''\n    if (qsPosition > -1) {\n        querystring = location.substr(qsPosition + 1)\n        location = location.substr(0, qsPosition)\n    }\n\n    return {location, querystring}\n}\n\n/**\n * Readable store that returns the current full location (incl. querystring)\n */\nexport const loc = readable(\n    null,\n    // eslint-disable-next-line prefer-arrow-callback\n    function start(set) {\n        set(getLocation())\n\n        const update = () => {\n            set(getLocation())\n        }\n        window.addEventListener('hashchange', update, false)\n\n        return function stop() {\n            window.removeEventListener('hashchange', update, false)\n        }\n    }\n)\n\n/**\n * Readable store that returns the current location\n */\nexport const location = derived(\n    loc,\n    ($loc) => $loc.location\n)\n\n/**\n * Readable store that returns the current querystring\n */\nexport const querystring = derived(\n    loc,\n    ($loc) => $loc.querystring\n)\n\n/**\n * Navigates to a new page programmatically.\n *\n * @param {string} location - Path to navigate to (must start with `/` or '#/')\n * @return {Promise<void>} Promise that resolves after the page navigation has completed\n */\nexport async function push(location) {\n    if (!location || location.length < 1 || (location.charAt(0) != '/' && location.indexOf('#/') !== 0)) {\n        throw Error('Invalid parameter location')\n    }\n\n    // Execute this code when the current call stack is complete\n    await tick()\n\n    // Note: this will include scroll state in history even when restoreScrollState is false\n    history.replaceState({scrollX: window.scrollX, scrollY: window.scrollY}, undefined, undefined)      \n    window.location.hash = (location.charAt(0) == '#' ? '' : '#') + location\n}\n\n/**\n * Navigates back in history (equivalent to pressing the browser's back button).\n * \n * @return {Promise<void>} Promise that resolves after the page navigation has completed\n */\nexport async function pop() {\n    // Execute this code when the current call stack is complete\n    await tick()\n\n    window.history.back()\n}\n\n/**\n * Replaces the current page but without modifying the history stack.\n *\n * @param {string} location - Path to navigate to (must start with `/` or '#/')\n * @return {Promise<void>} Promise that resolves after the page navigation has completed\n */\nexport async function replace(location) {\n    if (!location || location.length < 1 || (location.charAt(0) != '/' && location.indexOf('#/') !== 0)) {\n        throw Error('Invalid parameter location')\n    }\n\n    // Execute this code when the current call stack is complete\n    await tick()\n\n    const dest = (location.charAt(0) == '#' ? '' : '#') + location\n    try {\n        window.history.replaceState(undefined, undefined, dest)\n    }\n    catch (e) {\n        // eslint-disable-next-line no-console\n        console.warn('Caught exception while replacing the current page. If you\\'re running this in the Svelte REPL, please note that the `replace` method might not work in this environment.')\n    }\n\n    // The method above doesn't trigger the hashchange event, so let's do that manually\n    window.dispatchEvent(new Event('hashchange'))\n}\n\n/**\n * Svelte Action that enables a link element (`<a>`) to use our history management.\n *\n * For example:\n *\n * ````html\n * <a href=\"/books\" use:link>View books</a>\n * ````\n *\n * @param {HTMLElement} node - The target node (automatically set by Svelte). Must be an anchor tag (`<a>`) with a href attribute starting in `/`\n * @param {string} hrefVar - A string to use in place of the link's href attribute. Using this allows for updating link's targets reactively.\n */\nexport function link(node, hrefVar) {\n    // Only apply to <a> tags\n    if (!node || !node.tagName || node.tagName.toLowerCase() != 'a') {\n        throw Error('Action \"link\" can only be used with <a> tags')\n    }\n\n    updateLink(node, hrefVar || node.getAttribute('href'))\n\n    return {\n        update(updated) {\n            updateLink(node, updated)\n        }\n    }\n}\n\n// Internal function used by the link function\nfunction updateLink(node, href) {\n    // Destination must start with '/'\n    if (!href || href.length < 1 || href.charAt(0) != '/') {\n        throw Error('Invalid value for \"href\" attribute: ' + href)\n    }\n\n    // Add # to the href attribute\n    node.setAttribute('href', '#' + href)\n    node.addEventListener('click', scrollstateHistoryHandler)\n}\n\n/**\n * The handler attached to an anchor tag responsible for updating the\n * current history state with the current scroll state\n *\n * @param {HTMLElementEventMap} event - an onclick event attached to an anchor tag\n */\nfunction scrollstateHistoryHandler(event) {\n    // Prevent default anchor onclick behaviour\n    event.preventDefault()\n    const href = event.currentTarget.getAttribute('href')\n    // Setting the url (3rd arg) to href will break clicking for reasons, so don't try to do that\n    history.replaceState({scrollX: window.scrollX, scrollY: window.scrollY}, undefined, undefined)\n    // This will force an update as desired, but this time our scroll state will be attached\n    window.location.hash = href\n}\n</script>\n\n{#if componentParams}\n    <svelte:component\n    this=\"{component}\"\n    params=\"{componentParams}\"\n    on:routeEvent\n    {...props}\n    />\n{:else}\n    <svelte:component\n    this=\"{component}\"\n    on:routeEvent\n    {...props}\n    />\n{/if}\n\n<script>\nimport {createEventDispatcher, afterUpdate} from 'svelte'\nimport regexparam from 'regexparam'\n\n/**\n * Dictionary of all routes, in the format `'/path': component`.\n *\n * For example:\n * ````js\n * import HomeRoute from './routes/HomeRoute.svelte'\n * import BooksRoute from './routes/BooksRoute.svelte'\n * import NotFoundRoute from './routes/NotFoundRoute.svelte'\n * routes = {\n *     '/': HomeRoute,\n *     '/books': BooksRoute,\n *     '*': NotFoundRoute\n * }\n * ````\n */\nexport let routes = {}\n\n/**\n * Optional prefix for the routes in this router. This is useful for example in the case of nested routers.\n */\nexport let prefix = ''\n\n/**\n * If set to true, the router will restore scroll positions on back navigation\n * and scroll to top on forward navigation.\n */\nexport let restoreScrollState = false\n\n/**\n * Container for a route: path, component\n */\nclass RouteItem {\n    /**\n     * Initializes the object and creates a regular expression from the path, using regexparam.\n     *\n     * @param {string} path - Path to the route (must start with '/' or '*')\n     * @param {SvelteComponent|WrappedComponent} component - Svelte component for the route, optionally wrapped\n     */\n    constructor(path, component) {\n        if (!component || (typeof component != 'function' && (typeof component != 'object' || component._sveltesparouter !== true))) {\n            throw Error('Invalid component object')\n        }\n\n        // Path must be a regular or expression, or a string starting with '/' or '*'\n        if (!path || \n            (typeof path == 'string' && (path.length < 1 || (path.charAt(0) != '/' && path.charAt(0) != '*'))) ||\n            (typeof path == 'object' && !(path instanceof RegExp))\n        ) {\n            throw Error('Invalid value for \"path\" argument - strings must start with / or *')\n        }\n\n        const {pattern, keys} = regexparam(path)\n\n        this.path = path\n\n        // Check if the component is wrapped and we have conditions\n        if (typeof component == 'object' && component._sveltesparouter === true) {\n            this.component = component.component\n            this.conditions = component.conditions || []\n            this.userData = component.userData\n            this.props = component.props || {}\n        }\n        else {\n            // Convert the component to a function that returns a Promise, to normalize it\n            this.component = () => Promise.resolve(component)\n            this.conditions = []\n            this.props = {}\n        }\n\n        this._pattern = pattern\n        this._keys = keys\n    }\n\n    /**\n     * Checks if `path` matches the current route.\n     * If there's a match, will return the list of parameters from the URL (if any).\n     * In case of no match, the method will return `null`.\n     *\n     * @param {string} path - Path to test\n     * @returns {null|Object.<string, string>} List of paramters from the URL if there's a match, or `null` otherwise.\n     */\n    match(path) {\n        // If there's a prefix, check if it matches the start of the path.\n        // If not, bail early, else remove it before we run the matching.\n        if (prefix) {\n            if (typeof prefix == 'string') {\n                if (path.startsWith(prefix)) {\n                    path = path.substr(prefix.length) || '/'\n                }\n                else {\n                    return null\n                }\n            }\n            else if (prefix instanceof RegExp) {\n                const match = path.match(prefix)\n                if (match && match[0]) {\n                    path = path.substr(match[0].length) || '/'\n                }\n                else {\n                    return null\n                }\n            }\n        }\n\n        // Check if the pattern matches\n        const matches = this._pattern.exec(path)\n        if (matches === null) {\n            return null\n        }\n\n        // If the input was a regular expression, this._keys would be false, so return matches as is\n        if (this._keys === false) {\n            return matches\n        }\n\n        const out = {}\n        let i = 0\n        while (i < this._keys.length) {\n            // In the match parameters, URL-decode all values\n            try {\n                out[this._keys[i]] = decodeURIComponent(matches[i + 1] || '') || null\n            }\n            catch (e) {\n                out[this._keys[i]] = null\n            }\n            i++\n        }\n        return out\n    }\n\n    /**\n     * Dictionary with route details passed to the pre-conditions functions, as well as the `routeLoading`, `routeLoaded` and `conditionsFailed` events\n     * @typedef {Object} RouteDetail\n     * @property {string|RegExp} route - Route matched as defined in the route definition (could be a string or a reguar expression object)\n     * @property {string} location - Location path\n     * @property {string} querystring - Querystring from the hash\n     * @property {object} [userData] - Custom data passed by the user\n     * @property {SvelteComponent} [component] - Svelte component (only in `routeLoaded` events)\n     * @property {string} [name] - Name of the Svelte component (only in `routeLoaded` events)\n     */\n\n    /**\n     * Executes all conditions (if any) to control whether the route can be shown. Conditions are executed in the order they are defined, and if a condition fails, the following ones aren't executed.\n     * \n     * @param {RouteDetail} detail - Route detail\n     * @returns {bool} Returns true if all the conditions succeeded\n     */\n    async checkConditions(detail) {\n        for (let i = 0; i < this.conditions.length; i++) {\n            if (!(await this.conditions[i](detail))) {\n                return false\n            }\n        }\n\n        return true\n    }\n}\n\n// Set up all routes\nconst routesList = []\nif (routes instanceof Map) {\n    // If it's a map, iterate on it right away\n    routes.forEach((route, path) => {\n        routesList.push(new RouteItem(path, route))\n    })\n}\nelse {\n    // We have an object, so iterate on its own properties\n    Object.keys(routes).forEach((path) => {\n        routesList.push(new RouteItem(path, routes[path]))\n    })\n}\n\n// Props for the component to render\nlet component = null\nlet componentParams = null\nlet props = {}\n\n// Event dispatcher from Svelte\nconst dispatch = createEventDispatcher()\n\n// Just like dispatch, but executes on the next iteration of the event loop\nasync function dispatchNextTick(name, detail) {\n    // Execute this code when the current call stack is complete\n    await tick()\n    dispatch(name, detail)\n}\n\n// If this is set, then that means we have popped into this var the state of our last scroll position\nlet previousScrollState = null\n\n// Update history.scrollRestoration depending on restoreScrollState\n$: history.scrollRestoration = restoreScrollState ? 'manual' : 'auto'\n\nif (restoreScrollState) {\n    window.addEventListener('popstate', (event) => {\n        // If this event was from our history.replaceState, event.state will contain\n        // our scroll history. Otherwise, event.state will be null (like on forward\n        // navigation)\n        if (event.state && event.state.scrollY) {\n            previousScrollState = event.state\n        }\n        else {\n            previousScrollState = null\n        }\n    })\n\n    afterUpdate(() => {\n        // If this exists, then this is a back navigation: restore the scroll position\n        if (previousScrollState) {\n            window.scrollTo(previousScrollState.scrollX, previousScrollState.scrollY)\n        }\n        else {\n            // Otherwise this is a forward navigation: scroll to top\n            window.scrollTo(0, 0)\n        }\n    })\n}\n\n// Always have the latest value of loc\nlet lastLoc = null\n\n// Current object of the component loaded\nlet componentObj = null\n\n// Handle hash change events\n// Listen to changes in the $loc store and update the page\n// Do not use the $: syntax because it gets triggered by too many things\nloc.subscribe(async (newLoc) => {\n    lastLoc = newLoc\n\n    // Find a route matching the location\n    let i = 0\n    while (i < routesList.length) {\n        const match = routesList[i].match(newLoc.location)\n        if (!match) {\n            i++\n            continue\n        }\n\n        const detail = {\n            route: routesList[i].path,\n            location: newLoc.location,\n            querystring: newLoc.querystring,\n            userData: routesList[i].userData\n        }\n\n        // Check if the route can be loaded - if all conditions succeed\n        if (!(await routesList[i].checkConditions(detail))) {\n            // Don't display anything\n            component = null\n            componentObj = null\n            // Trigger an event to notify the user, then exit\n            dispatchNextTick('conditionsFailed', detail)\n            return\n        }\n        \n        // Trigger an event to alert that we're loading the route\n        // We need to clone the object on every event invocation so we don't risk the object to be modified in the next tick\n        dispatchNextTick('routeLoading', Object.assign({}, detail))\n\n        // If there's a component to show while we're loading the route, display it\n        const obj = routesList[i].component\n        // Do not replace the component if we're loading the same one as before, to avoid the route being unmounted and re-mounted\n        if (componentObj != obj) {\n            if (obj.loading) {\n                component = obj.loading\n                componentObj = obj\n                componentParams = obj.loadingParams\n                props = {}\n\n                // Trigger the routeLoaded event for the loading component\n                // Create a copy of detail so we don't modify the object for the dynamic route (and the dynamic route doesn't modify our object too)\n                dispatchNextTick('routeLoaded', Object.assign({}, detail, {\n                    component: component,\n                    name: component.name\n                }))\n            }\n            else {\n                component = null\n                componentObj = null\n            }\n\n            // Invoke the Promise\n            const loaded = await obj()\n\n            // Now that we're here, after the promise resolved, check if we still want this component, as the user might have navigated to another page in the meanwhile\n            if (newLoc != lastLoc) {\n                // Don't update the component, just exit\n                return\n            }\n\n            // If there is a \"default\" property, which is used by async routes, then pick that\n            component = (loaded && loaded.default) || loaded\n            componentObj = obj\n        }\n\n        // Set componentParams only if we have a match, to avoid a warning similar to `<Component> was created with unknown prop 'params'`\n        // Of course, this assumes that developers always add a \"params\" prop when they are expecting parameters\n        if (match && typeof match == 'object' && Object.keys(match).length) {\n            componentParams = match\n        }\n        else {\n            componentParams = null\n        }\n\n        // Set static props, if any\n        props = routesList[i].props\n\n        // Dispatch the routeLoaded event then exit\n        // We need to clone the object on every event invocation so we don't risk the object to be modified in the next tick\n        dispatchNextTick('routeLoaded', Object.assign({}, detail, {\n            component: component,\n            name: component.name\n        }))\n        return\n    }\n\n    // If we're still here, there was no match, so show the empty component\n    component = null\n    componentObj = null\n})\n</script>\n","export default function (str, loose) {\n\tif (str instanceof RegExp) return { keys:false, pattern:str };\n\tvar c, o, tmp, ext, keys=[], pattern='', arr = str.split('/');\n\tarr[0] || arr.shift();\n\n\twhile (tmp = arr.shift()) {\n\t\tc = tmp[0];\n\t\tif (c === '*') {\n\t\t\tkeys.push('wild');\n\t\t\tpattern += '/(.*)';\n\t\t} else if (c === ':') {\n\t\t\to = tmp.indexOf('?', 1);\n\t\t\text = tmp.indexOf('.', 1);\n\t\t\tkeys.push( tmp.substring(1, !!~o ? o : !!~ext ? ext : tmp.length) );\n\t\t\tpattern += !!~o && !~ext ? '(?:/([^/]+?))?' : '/([^/]+?)';\n\t\t\tif (!!~ext) pattern += (!!~o ? '?' : '') + '\\\\' + tmp.substring(ext);\n\t\t} else {\n\t\t\tpattern += '/' + tmp;\n\t\t}\n\t}\n\n\treturn {\n\t\tkeys: keys,\n\t\tpattern: new RegExp('^' + pattern + (loose ? '(?=$|\\/)' : '\\/?$'), 'i')\n\t};\n}\n","const thousand = 1000;\r\nconst million = 1000000;\r\nconst billion = 1000000000;\r\nconst trillion = 1000000000000;\r\nconst quadrilion = 1000000000000000;\r\n/**\r\n * Function to format a number for display on screen\r\n * @param input Number to format\r\n * @param decimals How many decimals do you want\r\n */\r\nexport function formatNumber(input, decimals) {\r\n    if (!input)\r\n        input = 0;\r\n    if (input < 0)\r\n        return \"-\" + formatNumber(-1 * input, decimals);\r\n    if (input >= quadrilion)\r\n        return input.toExponential(decimals).replace(\"+\", \"\");\r\n    if (input >= trillion)\r\n        return (input / trillion).toFixed(decimals) + 'T';\r\n    if (input >= billion)\r\n        return (input / billion).toFixed(decimals) + 'B';\r\n    if (input >= million)\r\n        return (input / million).toFixed(decimals) + 'M';\r\n    if (input >= thousand)\r\n        return (input / thousand).toFixed(decimals) + 'K';\r\n    return input.toFixed(decimals);\r\n}\r\n/**\r\n * Function to format a number for display on screen\r\n * Will only show decimal places when the number is abbreviated\r\n * @param input Number to format\r\n */\r\nexport function formatWhole(input) {\r\n    if (!input)\r\n        input = 0;\r\n    if (input < 0)\r\n        return \"-\" + formatWhole(-1 * input);\r\n    if (input < thousand)\r\n        return formatNumber(input, 0);\r\n    return formatNumber(input, 2);\r\n}\r\n","// Copyright (c) 2013 Pieroxy <pieroxy@pieroxy.net>\n// This work is free. You can redistribute it and/or modify it\n// under the terms of the WTFPL, Version 2\n// For more information see LICENSE.txt or http://www.wtfpl.net/\n//\n// For more information, the home page:\n// http://pieroxy.net/blog/pages/lz-string/testing.html\n//\n// LZ-based compression algorithm, version 1.4.4\nvar LZString = (function() {\n\n// private property\nvar f = String.fromCharCode;\nvar keyStrBase64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\nvar keyStrUriSafe = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$\";\nvar baseReverseDic = {};\n\nfunction getBaseValue(alphabet, character) {\n  if (!baseReverseDic[alphabet]) {\n    baseReverseDic[alphabet] = {};\n    for (var i=0 ; i<alphabet.length ; i++) {\n      baseReverseDic[alphabet][alphabet.charAt(i)] = i;\n    }\n  }\n  return baseReverseDic[alphabet][character];\n}\n\nvar LZString = {\n  compressToBase64 : function (input) {\n    if (input == null) return \"\";\n    var res = LZString._compress(input, 6, function(a){return keyStrBase64.charAt(a);});\n    switch (res.length % 4) { // To produce valid Base64\n    default: // When could this happen ?\n    case 0 : return res;\n    case 1 : return res+\"===\";\n    case 2 : return res+\"==\";\n    case 3 : return res+\"=\";\n    }\n  },\n\n  decompressFromBase64 : function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrBase64, input.charAt(index)); });\n  },\n\n  compressToUTF16 : function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 15, function(a){return f(a+32);}) + \" \";\n  },\n\n  decompressFromUTF16: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 16384, function(index) { return compressed.charCodeAt(index) - 32; });\n  },\n\n  //compress into uint8array (UCS-2 big endian format)\n  compressToUint8Array: function (uncompressed) {\n    var compressed = LZString.compress(uncompressed);\n    var buf=new Uint8Array(compressed.length*2); // 2 bytes per character\n\n    for (var i=0, TotalLen=compressed.length; i<TotalLen; i++) {\n      var current_value = compressed.charCodeAt(i);\n      buf[i*2] = current_value >>> 8;\n      buf[i*2+1] = current_value % 256;\n    }\n    return buf;\n  },\n\n  //decompress from uint8array (UCS-2 big endian format)\n  decompressFromUint8Array:function (compressed) {\n    if (compressed===null || compressed===undefined){\n        return LZString.decompress(compressed);\n    } else {\n        var buf=new Array(compressed.length/2); // 2 bytes per character\n        for (var i=0, TotalLen=buf.length; i<TotalLen; i++) {\n          buf[i]=compressed[i*2]*256+compressed[i*2+1];\n        }\n\n        var result = [];\n        buf.forEach(function (c) {\n          result.push(f(c));\n        });\n        return LZString.decompress(result.join(''));\n\n    }\n\n  },\n\n\n  //compress into a string that is already URI encoded\n  compressToEncodedURIComponent: function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 6, function(a){return keyStrUriSafe.charAt(a);});\n  },\n\n  //decompress from an output of compressToEncodedURIComponent\n  decompressFromEncodedURIComponent:function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    input = input.replace(/ /g, \"+\");\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrUriSafe, input.charAt(index)); });\n  },\n\n  compress: function (uncompressed) {\n    return LZString._compress(uncompressed, 16, function(a){return f(a);});\n  },\n  _compress: function (uncompressed, bitsPerChar, getCharFromInt) {\n    if (uncompressed == null) return \"\";\n    var i, value,\n        context_dictionary= {},\n        context_dictionaryToCreate= {},\n        context_c=\"\",\n        context_wc=\"\",\n        context_w=\"\",\n        context_enlargeIn= 2, // Compensate for the first entry which should not count\n        context_dictSize= 3,\n        context_numBits= 2,\n        context_data=[],\n        context_data_val=0,\n        context_data_position=0,\n        ii;\n\n    for (ii = 0; ii < uncompressed.length; ii += 1) {\n      context_c = uncompressed.charAt(ii);\n      if (!Object.prototype.hasOwnProperty.call(context_dictionary,context_c)) {\n        context_dictionary[context_c] = context_dictSize++;\n        context_dictionaryToCreate[context_c] = true;\n      }\n\n      context_wc = context_w + context_c;\n      if (Object.prototype.hasOwnProperty.call(context_dictionary,context_wc)) {\n        context_w = context_wc;\n      } else {\n        if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n          if (context_w.charCodeAt(0)<256) {\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<8 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          } else {\n            value = 1;\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1) | value;\n              if (context_data_position ==bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = 0;\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<16 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          }\n          context_enlargeIn--;\n          if (context_enlargeIn == 0) {\n            context_enlargeIn = Math.pow(2, context_numBits);\n            context_numBits++;\n          }\n          delete context_dictionaryToCreate[context_w];\n        } else {\n          value = context_dictionary[context_w];\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n\n\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        // Add wc to the dictionary.\n        context_dictionary[context_wc] = context_dictSize++;\n        context_w = String(context_c);\n      }\n    }\n\n    // Output the code for w.\n    if (context_w !== \"\") {\n      if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n        if (context_w.charCodeAt(0)<256) {\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<8 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        } else {\n          value = 1;\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | value;\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = 0;\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<16 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        delete context_dictionaryToCreate[context_w];\n      } else {\n        value = context_dictionary[context_w];\n        for (i=0 ; i<context_numBits ; i++) {\n          context_data_val = (context_data_val << 1) | (value&1);\n          if (context_data_position == bitsPerChar-1) {\n            context_data_position = 0;\n            context_data.push(getCharFromInt(context_data_val));\n            context_data_val = 0;\n          } else {\n            context_data_position++;\n          }\n          value = value >> 1;\n        }\n\n\n      }\n      context_enlargeIn--;\n      if (context_enlargeIn == 0) {\n        context_enlargeIn = Math.pow(2, context_numBits);\n        context_numBits++;\n      }\n    }\n\n    // Mark the end of the stream\n    value = 2;\n    for (i=0 ; i<context_numBits ; i++) {\n      context_data_val = (context_data_val << 1) | (value&1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data_position = 0;\n        context_data.push(getCharFromInt(context_data_val));\n        context_data_val = 0;\n      } else {\n        context_data_position++;\n      }\n      value = value >> 1;\n    }\n\n    // Flush the last char\n    while (true) {\n      context_data_val = (context_data_val << 1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data.push(getCharFromInt(context_data_val));\n        break;\n      }\n      else context_data_position++;\n    }\n    return context_data.join('');\n  },\n\n  decompress: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 32768, function(index) { return compressed.charCodeAt(index); });\n  },\n\n  _decompress: function (length, resetValue, getNextValue) {\n    var dictionary = [],\n        next,\n        enlargeIn = 4,\n        dictSize = 4,\n        numBits = 3,\n        entry = \"\",\n        result = [],\n        i,\n        w,\n        bits, resb, maxpower, power,\n        c,\n        data = {val:getNextValue(0), position:resetValue, index:1};\n\n    for (i = 0; i < 3; i += 1) {\n      dictionary[i] = i;\n    }\n\n    bits = 0;\n    maxpower = Math.pow(2,2);\n    power=1;\n    while (power!=maxpower) {\n      resb = data.val & data.position;\n      data.position >>= 1;\n      if (data.position == 0) {\n        data.position = resetValue;\n        data.val = getNextValue(data.index++);\n      }\n      bits |= (resb>0 ? 1 : 0) * power;\n      power <<= 1;\n    }\n\n    switch (next = bits) {\n      case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 2:\n        return \"\";\n    }\n    dictionary[3] = c;\n    w = c;\n    result.push(c);\n    while (true) {\n      if (data.index > length) {\n        return \"\";\n      }\n\n      bits = 0;\n      maxpower = Math.pow(2,numBits);\n      power=1;\n      while (power!=maxpower) {\n        resb = data.val & data.position;\n        data.position >>= 1;\n        if (data.position == 0) {\n          data.position = resetValue;\n          data.val = getNextValue(data.index++);\n        }\n        bits |= (resb>0 ? 1 : 0) * power;\n        power <<= 1;\n      }\n\n      switch (c = bits) {\n        case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 2:\n          return result.join('');\n      }\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n      if (dictionary[c]) {\n        entry = dictionary[c];\n      } else {\n        if (c === dictSize) {\n          entry = w + w.charAt(0);\n        } else {\n          return null;\n        }\n      }\n      result.push(entry);\n\n      // Add w+entry[0] to the dictionary.\n      dictionary[dictSize++] = w + entry.charAt(0);\n      enlargeIn--;\n\n      w = entry;\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n    }\n  }\n};\n  return LZString;\n})();\n\nif (typeof define === 'function' && define.amd) {\n  define(function () { return LZString; });\n} else if( typeof module !== 'undefined' && module != null ) {\n  module.exports = LZString\n}\n","import { GameModel, gameModel, SaveData } from \"./gamemodel\";\r\nimport { compress, decompress } from 'lz-string';\r\nconst storageName = 'sveltedata';\r\n/**\r\n * Load the save data from localstorage.\r\n * If no data is found just return a new SaveData with default values.\r\n */\r\nexport function loadSaveGame() {\r\n    // see if data exists first\r\n    if (localStorage.getItem(storageName)) {\r\n        // using a try/catch in case this fails for some reason\r\n        try {\r\n            // get data from localstorage, decompress it using lz-string, then parse it back into a javascript object\r\n            let saveData = JSON.parse(decompress(localStorage.getItem(storageName)));\r\n            console.log('SaveData loaded:');\r\n            console.log(saveData);\r\n            // migrate the data so we know it is good to use\r\n            dataMigrate(saveData);\r\n            return saveData;\r\n        }\r\n        catch (error) {\r\n            console.error(error); // log the error so at least we can see it\r\n        }\r\n    }\r\n    else {\r\n        return new SaveData();\r\n    }\r\n}\r\n/**\r\n * Saves the data to localstorage\r\n * @param saveData SaveData\r\n */\r\nexport function saveSaveGame(saveData) {\r\n    // if save data exists\r\n    if (saveData) {\r\n        // set the last saved time\r\n        saveData.lastSaved = Date.now();\r\n        try {\r\n            // Use JSON.stringift to turn the object into a string, then compress with lz-string,\r\n            // before setting it in localstorage\r\n            localStorage.setItem(storageName, compress(JSON.stringify(saveData)));\r\n        }\r\n        catch (error) {\r\n            console.error(error); // log the error so at least we can see it\r\n        }\r\n    }\r\n}\r\n/**\r\n * This function will help to update any data that was saved before new variables were added.\r\n * Otherwise this can cause errors when something you expected to be there is not there.\r\n */\r\nfunction dataMigrate(saveData) {\r\n    // create a new saveData to use as a reference\r\n    let master = new SaveData();\r\n    // get an array of the properties of saveData\r\n    let keys = Object.getOwnPropertyNames(master);\r\n    // check each property to make sure it exists on the save data\r\n    keys.forEach((prop) => {\r\n        if (typeof saveData[prop] === 'undefined') {\r\n            console.log(`${prop} was undefined, adding it to saveData`);\r\n            saveData[prop] = master[prop];\r\n        }\r\n    });\r\n}\r\n/**\r\n * Resets save game in localstorage and resets the gameModel\r\n */\r\nexport function resetSaveGame() {\r\n    // remove from local storage\r\n    localStorage.removeItem(storageName);\r\n    // update the stored gameModel with a new one\r\n    gameModel.update(g => g = new GameModel());\r\n}\r\n","import { writable } from 'svelte/store';\r\nimport { loadSaveGame } from './saveloadfunctions';\r\n/**\r\n * This class holds any data that needs to be saved when the player saves their game.\r\n * It should only be used for values that must be saved. Anything transient should go directly on the GameModel.\r\n */\r\nexport class SaveData {\r\n    constructor() {\r\n        // Used to hold the current money the player has, initialized at 0\r\n        this.money = 0;\r\n        // Used to hold which upgrades have been bought, and the quantity\r\n        // we will only save the id and the qty of each upgrade to avoiding wasting save game storage\r\n        this.upgradesBought = [];\r\n        // Used to hold which upgrades have been generated, and the quantity\r\n        this.upgradesGenerated = [];\r\n        // Used to hold when the game was last saved, needed to calculate offline progress\r\n        this.lastSaved = 0;\r\n    }\r\n}\r\n/**\r\n * This class holds the data the game needs to function.\r\n * It will be accessible from anywhere in the game using svelte stores.\r\n */\r\nexport class GameModel {\r\n    constructor() {\r\n        // when we first create the game model we need to load any save data from localstorage\r\n        this.saveData = loadSaveGame();\r\n    }\r\n    /**\r\n     * Add money to the save data\r\n     * @param value Amount of money to add\r\n     */\r\n    addMoney(value) {\r\n        if (!isNaN(value)) {\r\n            this.saveData.money += value;\r\n        }\r\n    }\r\n    /**\r\n     * Takes money from the save data.\r\n     * Returns true if there was enough money, false if not.\r\n     * @param value Amount of money to spend\r\n     */\r\n    spendMoney(value) {\r\n        if (!isNaN(value) && this.saveData.money >= value) {\r\n            this.saveData.money -= value;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * A writable store of the gameModel that can be accessed from other parts of the application.\r\n */\r\nexport const gameModel = writable(new GameModel());\r\n","import { gameModel } from \"./gamemodel\";\r\n/**\r\n * Reference to the GameModel\r\n */\r\nlet gameModelInstance;\r\n// Subscribe to the store so our local copy of game model is updated whenever gamemodel changes\r\ngameModel.subscribe(instance => gameModelInstance = instance);\r\n/**\r\n * Button click value\r\n * @TODO Add functionality to increase the value of the button\r\n */\r\nlet buttonClickValue = 1;\r\n/**\r\n * Function for clicking the button.\r\n * This call be called by actually clicking the button.\r\n * Or by generators that click the button automatically.\r\n * @param times the number of times to click (defaults to 1)\r\n */\r\nexport function clickTheButton(times = 1) {\r\n    gameModelInstance.addMoney(buttonClickValue * times);\r\n    gameModel.update(m => m = gameModelInstance);\r\n}\r\n/**\r\n * Gets the current value of the button\r\n */\r\nexport function getButtonClickValue() {\r\n    return buttonClickValue;\r\n}\r\n","import { gameModel } from \"./gamemodel\";\r\nimport { clickTheButton } from \"./moneybutton\";\r\nimport { saveSaveGame } from \"./saveloadfunctions\";\r\n/**\r\n * Reference to the GameModel\r\n */\r\nlet gameModelInstance;\r\n// Subscribe to the store so our local copy of game model is updated whenever gamemodel changes\r\ngameModel.subscribe(instance => gameModelInstance = instance);\r\n/**\r\n * Abstract class that defines common Upgrade properties\r\n */\r\nclass Upgrade {\r\n    constructor(id, name, description, basePrice, multiplier) {\r\n        this.id = id;\r\n        this.name = name;\r\n        this.description = description;\r\n        this.basePrice = basePrice;\r\n        this.multiplier = multiplier;\r\n    }\r\n    /**\r\n     * Get the count of how many of this upgrade have been bought\r\n     */\r\n    getBoughtCount() {\r\n        return gameModelInstance.saveData.upgradesBought[this.id] || 0;\r\n    }\r\n    /**\r\n     * Get the count of how many of this upgrade have been generated\r\n     */\r\n    getGeneratedCount() {\r\n        return gameModelInstance.saveData.upgradesGenerated[this.id] || 0;\r\n    }\r\n    /**\r\n     * Get the total count of this upgrade\r\n     */\r\n    getTotalCount() {\r\n        return this.getBoughtCount() + this.getGeneratedCount();\r\n    }\r\n    /**\r\n     * Get the current price to buy one of these upgrades\r\n     */\r\n    getPrice() {\r\n        return this.basePrice * Math.pow(this.multiplier, this.getBoughtCount());\r\n    }\r\n    /**\r\n     * Attempt to purchase this upgrade\r\n     */\r\n    purchase() {\r\n        if (gameModelInstance.spendMoney(this.getPrice())) {\r\n            // increase the amount owned\r\n            gameModelInstance.saveData.upgradesBought[this.id] = this.getBoughtCount() + 1;\r\n            // Update the svelte store\r\n            gameModel.update(m => m = gameModelInstance);\r\n            // Save game to localStorage\r\n            saveSaveGame(gameModelInstance.saveData);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Class to define how a Generator upgrade behaves.\r\n * Extends Upgrade, meaning it inherits all of the properties.\r\n */\r\nexport class Generator extends Upgrade {\r\n    constructor(id, name, description, basePrice, multiplier, generatesId, generateTime) {\r\n        super(id, name, description, basePrice, multiplier);\r\n        // internal counter of how many have been generated\r\n        this.generated = 0;\r\n        this.generatesId = generatesId;\r\n        this.generateTime = generateTime;\r\n    }\r\n    /**\r\n     * Update this generator and generate some stuff!\r\n     * @param deltaT Time in seconds since last update\r\n     */\r\n    update(deltaT) {\r\n        // only do something if we have 1 or more of these\r\n        let count = this.getTotalCount();\r\n        if (count > 0) {\r\n            // update the internal generated number based on time\r\n            let generatedPerSecond = count / this.generateTime;\r\n            this.generated += generatedPerSecond * deltaT;\r\n            // if we have generated at least 1\r\n            if (this.generated > 1) {\r\n                if (this.generatesId) {\r\n                    // increase the amount owned\r\n                    gameModelInstance.saveData.upgradesGenerated[this.generatesId] =\r\n                        (gameModelInstance.saveData.upgradesGenerated[this.generatesId] || 0) + Math.floor(this.generated);\r\n                }\r\n                else {\r\n                    // click the button x number of times\r\n                    clickTheButton(Math.floor(this.generated));\r\n                }\r\n                // reset the internal generated\r\n                this.generated -= Math.floor(this.generated);\r\n                // update the svelte store\r\n                gameModel.update(m => m = gameModelInstance);\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * List of generators that can be bought\r\n */\r\nexport const generators = [\r\n    new Generator(1, // id\r\n    'Auto Clicker', // name\r\n    'Automatically clicks the button every 10 seconds', // description\r\n    25, // base price\r\n    1.1, // multiplier\r\n    null, // going to be lazy here and use null to describe clicking the button, for others it will be the id\r\n    10 // time per generated\r\n    ),\r\n    new Generator(2, 'Auto Clicker Buyer', 'Automatically buys an auto clicker every 10 seconds', 200, 1.2, 1, 10),\r\n    new Generator(3, 'Auto Clicker Buyer Buyer', 'Automatically buys an auto clicker buyer every 10 seconds', 5000, 1.3, 2, 10),\r\n    new Generator(4, 'Auto Clicker Buyer Buyer Buyer', 'Automatically buys an auto clicker buyer buyer every 10 seconds', 25000, 1.4, 3, 10)\r\n];\r\n/**\r\n * Self executing function that will automatically run when the game loads in order to test\r\n * that the upgrade ids are all unique. This is only for validation.\r\n */\r\n(() => {\r\n    let ids = [];\r\n    generators.forEach(e => {\r\n        if (ids[e.id]) {\r\n            alert(`Generator id: ${e.id} has been used more than once. All upgrade ids must be unique`);\r\n        }\r\n        ids[e.id] = true;\r\n    });\r\n})();\r\n","<script lang=\"ts\">\n    import {formatNumber} from '../gamelogic/utils';\n    import {clickTheButton, getButtonClickValue} from '../gamelogic/moneybutton';\n\n    function buttonClick() {\n        clickTheButton();\n    }\n</script>\n\n<button on:click={buttonClick}>💵 Click me for ${formatNumber(getButtonClickValue(), 2)} 💵</button>\n\n<style>\n    button {\n        padding:1rem 2rem;\n    }\n</style>","<script lang=\"ts\">\n    import { gameModel } from '../gamelogic/gamemodel';\n    import {Generator} from '../gamelogic/upgrades';\n    import { formatNumber, formatWhole } from '../gamelogic/utils';\n    export let generator : Generator;\n\n    // some svelte magic that means whenever the gameModel is updated we will refresh this generator\n    $: $gameModel, generator = generator;\n    \n    function purchase() {\n        generator.purchase();\n        generator = generator;\n    }\n</script>\n\n<div>\n    <strong>{generator.name}</strong>\n    <span>owned: <strong>{formatWhole(generator.getTotalCount())}</strong></span>\n    <button on:click={purchase}>Buy for ${formatNumber(generator.getPrice(),2)}</button>\n    <p>{generator.description}</p>\n</div>\n\n\n<style>\n    div {\n        margin-bottom: 1rem;\n        padding:0.5rem;\n        border: 1px solid #ccc;\n    }\n    p {\n        margin: 0.5em 0;\n    }\n\n    button {\n        float:right;\n    }\n</style>","<script lang=\"ts\">\n    import {generators} from '../gamelogic/upgrades';\n    import Generator from './Generator.svelte';\n</script>\n\n<div>\n    <h2>Generators</h2>\n    {#each generators as generator}\n        <Generator {generator}/>\n    {/each}\n</div>\n\n<style>\n\n</style>","<script lang=\"ts\">\n    import { formatNumber } from '../gamelogic/utils';\n    import MoneyButton from '../components/MoneyButton.svelte';\n    import {gameModel} from '../gamelogic/gamemodel';\n    import GeneratorList from '../components/GeneratorList.svelte';\n</script>\n\n<h1>Svelte Incremental Game Template</h1>\n<p>The current amount of money is <strong>${formatNumber($gameModel.saveData.money, 2)}</strong></p>\n<MoneyButton/>\n<div>\n    <GeneratorList/>\n</div>\n\n\n<style>\n    div {\n        display: grid;\n        grid-template-columns: repeat(1, 100%);\n    }\n\n    @media screen and (min-width: 992px) {\n\t\tdiv {\n            grid-template-columns: repeat(2, 50%);\n\t\t}\n\t}\n</style>","import { writable } from 'svelte/store';\r\n/**\r\n * Svelte store to hold an array of messages\r\n */\r\nexport const messageQueue = writable([]);\r\n/**\r\n * How long should each message be displayed in ms\r\n */\r\nconst messageTime = 4000;\r\n/**\r\n * Used to get a unique id for each message\r\n */\r\nlet idNumber = 0;\r\n/**\r\n * Simple class to hold a string and an ID used to display messages to the player\r\n * This could be expanded to include icons, sound effects, css classes for animations etc\r\n */\r\nclass Message {\r\n    constructor(message) {\r\n        this.message = message;\r\n        this.id = idNumber++;\r\n    }\r\n}\r\n/**\r\n * Function to add a message to the message queue\r\n * @param message Message to be shown to the player\r\n */\r\nexport function sendMessage(message) {\r\n    // create a message object\r\n    let notification = new Message(message);\r\n    // add the message to the message queue\r\n    messageQueue.update(m => m = [...m, notification]);\r\n    // create a timeout to automatically remove the message after messageTime elapsed\r\n    setTimeout(() => {\r\n        messageQueue.update(m => m = m.filter(e => e.id != notification.id));\r\n    }, messageTime);\r\n}\r\n","import { gameModel } from \"./gamemodel\";\r\nimport { sendMessage } from \"./notifications\";\r\nimport { saveSaveGame } from \"./saveloadfunctions\";\r\nimport { generators } from \"./upgrades\";\r\nimport { formatWhole } from \"./utils\";\r\n/**\r\n * Reference to the GameModel\r\n */\r\nlet gameModelInstance;\r\n// Subscribe to the store so our local copy of game model is updated whenever gamemodel changes\r\ngameModel.subscribe(instance => gameModelInstance = instance);\r\n/**\r\n * how often to run the loop. 200ms = 5 times per second\r\n * 200ms or 100ms is usually fast enough to feel responsive without wasting too much CPU time\r\n */\r\nconst ms = 200;\r\n/**\r\n * A reference to the interval that can be used to stop it if we need to\r\n */\r\nlet interval;\r\n/**\r\n * This function will start the game loop running at the desired rate, and save a reference to the interval so it can be stopped later\r\n */\r\nexport function startGameLoop() {\r\n    console.log('calculating offline progess');\r\n    calculateOfflineProgress();\r\n    console.log('starting the game loop');\r\n    interval = setInterval(gameLoop, ms);\r\n}\r\nlet lastRunTime = Date.now();\r\nlet lastSaved = Date.now();\r\n/**\r\n * deltaT or delta time is the time difference in seconds since the last time the loop ran\r\n */\r\nlet deltaT = 0;\r\n/**\r\n * The game loop function that runs many times per second in the background.\r\n */\r\nfunction gameLoop() {\r\n    let currentTime = Date.now();\r\n    // if lastSaved was more than 30 seconds ago we should save the game\r\n    if (currentTime - lastSaved > 30000) {\r\n        lastSaved = currentTime;\r\n        saveSaveGame(gameModelInstance.saveData);\r\n        sendMessage(\"Game auto-saved\");\r\n    }\r\n    // calculate deltaT based on the current time and the last run time\r\n    // we are using Math.max and Math.min to make sure deltaT is between 0 and 1 seconds\r\n    deltaT = Math.max(Math.min((currentTime - lastRunTime) / 1000, 1), 0);\r\n    lastRunTime = currentTime;\r\n    // Now we know what deltaT is we can update the game\r\n    gameUpdate(deltaT);\r\n}\r\n/**\r\n * Function to update all game data based on time\r\n * @param deltaT time in seconds since last update\r\n */\r\nfunction gameUpdate(deltaT) {\r\n    // update each generator\r\n    generators.forEach(generator => generator.update(deltaT));\r\n}\r\n/**\r\n * Function to calculate the offline progress\r\n */\r\nfunction calculateOfflineProgress() {\r\n    // note how much we had before\r\n    let moneyBefore = gameModelInstance.saveData.money;\r\n    // calculate time in seconds since last saved\r\n    let currentTime = Date.now();\r\n    let offlineDeltaT = Math.max((currentTime - gameModelInstance.saveData.lastSaved) / 1000, 0);\r\n    console.log(`Offline for ${offlineDeltaT} seconds`);\r\n    // perform the game update for the total time\r\n    gameUpdate(offlineDeltaT);\r\n    // calculate total earned\r\n    let moneyEarned = gameModelInstance.saveData.money - moneyBefore;\r\n    sendMessage(`You have earned $${formatWhole(moneyEarned)} while offline!`);\r\n}\r\n","<script lang=\"ts\">\n    import { gameModel } from \"../gamelogic/gamemodel\";\n    import { sendMessage } from \"../gamelogic/notifications\";\n    import { resetSaveGame, saveSaveGame } from \"../gamelogic/saveloadfunctions\";\n\n    /**\n     * On click action to save the game in localstorage\n     */\n    let saveGame = function() {\n        saveSaveGame($gameModel.saveData);\n        sendMessage(\"Game has been saved\");\n    }\n\n    /**\n     * On click action to reset the save game in localstorage\n     */\n    let resetGame = function() {\n        if (confirm('Are you sure you want to reset your game?')) {\n            resetSaveGame();\n            sendMessage(\"Save Data has been wiped\");\n        }\n    }\n</script>\n\n<h1>Options</h1>\n\n<button on:click={saveGame}>Save Game</button>\n\n<button on:click={resetGame}>Reset Save Game</button>\n\n<style>\n\n</style>","export { identity as linear } from '../internal/index.mjs';\n\n/*\nAdapted from https://github.com/mattdesl\nDistributed under MIT License https://github.com/mattdesl/eases/blob/master/LICENSE.md\n*/\nfunction backInOut(t) {\n    const s = 1.70158 * 1.525;\n    if ((t *= 2) < 1)\n        return 0.5 * (t * t * ((s + 1) * t - s));\n    return 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2);\n}\nfunction backIn(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n}\nfunction backOut(t) {\n    const s = 1.70158;\n    return --t * t * ((s + 1) * t + s) + 1;\n}\nfunction bounceOut(t) {\n    const a = 4.0 / 11.0;\n    const b = 8.0 / 11.0;\n    const c = 9.0 / 10.0;\n    const ca = 4356.0 / 361.0;\n    const cb = 35442.0 / 1805.0;\n    const cc = 16061.0 / 1805.0;\n    const t2 = t * t;\n    return t < a\n        ? 7.5625 * t2\n        : t < b\n            ? 9.075 * t2 - 9.9 * t + 3.4\n            : t < c\n                ? ca * t2 - cb * t + cc\n                : 10.8 * t * t - 20.52 * t + 10.72;\n}\nfunction bounceInOut(t) {\n    return t < 0.5\n        ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0))\n        : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;\n}\nfunction bounceIn(t) {\n    return 1.0 - bounceOut(1.0 - t);\n}\nfunction circInOut(t) {\n    if ((t *= 2) < 1)\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n}\nfunction circIn(t) {\n    return 1.0 - Math.sqrt(1.0 - t * t);\n}\nfunction circOut(t) {\n    return Math.sqrt(1 - --t * t);\n}\nfunction cubicInOut(t) {\n    return t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\nfunction cubicIn(t) {\n    return t * t * t;\n}\nfunction cubicOut(t) {\n    const f = t - 1.0;\n    return f * f * f + 1.0;\n}\nfunction elasticInOut(t) {\n    return t < 0.5\n        ? 0.5 *\n            Math.sin(((+13.0 * Math.PI) / 2) * 2.0 * t) *\n            Math.pow(2.0, 10.0 * (2.0 * t - 1.0))\n        : 0.5 *\n            Math.sin(((-13.0 * Math.PI) / 2) * (2.0 * t - 1.0 + 1.0)) *\n            Math.pow(2.0, -10.0 * (2.0 * t - 1.0)) +\n            1.0;\n}\nfunction elasticIn(t) {\n    return Math.sin((13.0 * t * Math.PI) / 2) * Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction elasticOut(t) {\n    return (Math.sin((-13.0 * (t + 1.0) * Math.PI) / 2) * Math.pow(2.0, -10.0 * t) + 1.0);\n}\nfunction expoInOut(t) {\n    return t === 0.0 || t === 1.0\n        ? t\n        : t < 0.5\n            ? +0.5 * Math.pow(2.0, 20.0 * t - 10.0)\n            : -0.5 * Math.pow(2.0, 10.0 - t * 20.0) + 1.0;\n}\nfunction expoIn(t) {\n    return t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction expoOut(t) {\n    return t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);\n}\nfunction quadInOut(t) {\n    t /= 0.5;\n    if (t < 1)\n        return 0.5 * t * t;\n    t--;\n    return -0.5 * (t * (t - 2) - 1);\n}\nfunction quadIn(t) {\n    return t * t;\n}\nfunction quadOut(t) {\n    return -t * (t - 2.0);\n}\nfunction quartInOut(t) {\n    return t < 0.5\n        ? +8.0 * Math.pow(t, 4.0)\n        : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0;\n}\nfunction quartIn(t) {\n    return Math.pow(t, 4.0);\n}\nfunction quartOut(t) {\n    return Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\n}\nfunction quintInOut(t) {\n    if ((t *= 2) < 1)\n        return 0.5 * t * t * t * t * t;\n    return 0.5 * ((t -= 2) * t * t * t * t + 2);\n}\nfunction quintIn(t) {\n    return t * t * t * t * t;\n}\nfunction quintOut(t) {\n    return --t * t * t * t * t + 1;\n}\nfunction sineInOut(t) {\n    return -0.5 * (Math.cos(Math.PI * t) - 1);\n}\nfunction sineIn(t) {\n    const v = Math.cos(t * Math.PI * 0.5);\n    if (Math.abs(v) < 1e-14)\n        return 1;\n    else\n        return 1 - v;\n}\nfunction sineOut(t) {\n    return Math.sin((t * Math.PI) / 2);\n}\n\nexport { backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, cubicIn, cubicInOut, cubicOut, elasticIn, elasticInOut, elasticOut, expoIn, expoInOut, expoOut, quadIn, quadInOut, quadOut, quartIn, quartInOut, quartOut, quintIn, quintInOut, quintOut, sineIn, sineInOut, sineOut };\n","import { cubicInOut, linear, cubicOut } from '../easing/index.mjs';\nimport { is_function, assign } from '../internal/index.mjs';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nfunction blur(node, { delay = 0, duration = 400, easing = cubicInOut, amount = 5, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const f = style.filter === 'none' ? '' : style.filter;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `opacity: ${target_opacity - (od * u)}; filter: ${f} blur(${u * amount}px);`\n    };\n}\nfunction fade(node, { delay = 0, duration = 400, easing = linear }) {\n    const o = +getComputedStyle(node).opacity;\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `opacity: ${t * o}`\n    };\n}\nfunction fly(node, { delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * x}px, ${(1 - t) * y}px);\n\t\t\topacity: ${target_opacity - (od * u)}`\n    };\n}\nfunction slide(node, { delay = 0, duration = 400, easing = cubicOut }) {\n    const style = getComputedStyle(node);\n    const opacity = +style.opacity;\n    const height = parseFloat(style.height);\n    const padding_top = parseFloat(style.paddingTop);\n    const padding_bottom = parseFloat(style.paddingBottom);\n    const margin_top = parseFloat(style.marginTop);\n    const margin_bottom = parseFloat(style.marginBottom);\n    const border_top_width = parseFloat(style.borderTopWidth);\n    const border_bottom_width = parseFloat(style.borderBottomWidth);\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => 'overflow: hidden;' +\n            `opacity: ${Math.min(t * 20, 1) * opacity};` +\n            `height: ${t * height}px;` +\n            `padding-top: ${t * padding_top}px;` +\n            `padding-bottom: ${t * padding_bottom}px;` +\n            `margin-top: ${t * margin_top}px;` +\n            `margin-bottom: ${t * margin_bottom}px;` +\n            `border-top-width: ${t * border_top_width}px;` +\n            `border-bottom-width: ${t * border_bottom_width}px;`\n    };\n}\nfunction scale(node, { delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const sd = 1 - start;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - (sd * u)});\n\t\t\topacity: ${target_opacity - (od * u)}\n\t\t`\n    };\n}\nfunction draw(node, { delay = 0, speed, duration, easing = cubicInOut }) {\n    const len = node.getTotalLength();\n    if (duration === undefined) {\n        if (speed === undefined) {\n            duration = 800;\n        }\n        else {\n            duration = len / speed;\n        }\n    }\n    else if (typeof duration === 'function') {\n        duration = duration(len);\n    }\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `stroke-dasharray: ${t * len} ${u * len}`\n    };\n}\nfunction crossfade(_a) {\n    var { fallback } = _a, defaults = __rest(_a, [\"fallback\"]);\n    const to_receive = new Map();\n    const to_send = new Map();\n    function crossfade(from, node, params) {\n        const { delay = 0, duration = d => Math.sqrt(d) * 30, easing = cubicOut } = assign(assign({}, defaults), params);\n        const to = node.getBoundingClientRect();\n        const dx = from.left - to.left;\n        const dy = from.top - to.top;\n        const dw = from.width / to.width;\n        const dh = from.height / to.height;\n        const d = Math.sqrt(dx * dx + dy * dy);\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        const opacity = +style.opacity;\n        return {\n            delay,\n            duration: is_function(duration) ? duration(d) : duration,\n            easing,\n            css: (t, u) => `\n\t\t\t\topacity: ${t * opacity};\n\t\t\t\ttransform-origin: top left;\n\t\t\t\ttransform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${t + (1 - t) * dh});\n\t\t\t`\n        };\n    }\n    function transition(items, counterparts, intro) {\n        return (node, params) => {\n            items.set(params.key, {\n                rect: node.getBoundingClientRect()\n            });\n            return () => {\n                if (counterparts.has(params.key)) {\n                    const { rect } = counterparts.get(params.key);\n                    counterparts.delete(params.key);\n                    return crossfade(rect, node, params);\n                }\n                // if the node is disappearing altogether\n                // (i.e. wasn't claimed by the other list)\n                // then we need to supply an outro\n                items.delete(params.key);\n                return fallback && fallback(node, params, intro);\n            };\n        };\n    }\n    return [\n        transition(to_send, to_receive, false),\n        transition(to_receive, to_send, true)\n    ];\n}\n\nexport { blur, crossfade, draw, fade, fly, scale, slide };\n","import { cubicOut } from '../easing/index.mjs';\nimport { is_function } from '../internal/index.mjs';\n\nfunction flip(node, animation, params) {\n    const style = getComputedStyle(node);\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const scaleX = animation.from.width / node.clientWidth;\n    const scaleY = animation.from.height / node.clientHeight;\n    const dx = (animation.from.left - animation.to.left) / scaleX;\n    const dy = (animation.from.top - animation.to.top) / scaleY;\n    const d = Math.sqrt(dx * dx + dy * dy);\n    const { delay = 0, duration = (d) => Math.sqrt(d) * 120, easing = cubicOut } = params;\n    return {\n        delay,\n        duration: is_function(duration) ? duration(d) : duration,\n        easing,\n        css: (_t, u) => `transform: ${transform} translate(${u * dx}px, ${u * dy}px);`\n    };\n}\n\nexport { flip };\n","<script lang=\"ts\">\n    import { fly } from 'svelte/transition';\n    import { flip } from 'svelte/animate';\n    import { sineInOut } from 'svelte/easing';\n    import { messageQueue } from '../gamelogic/notifications';\n</script>\n\n<div>\n    {#each $messageQueue as message (message.id)}\n        <span transition:fly={{x: 500, duration : 500, easing: sineInOut}} animate:flip>{message.message}</span>\n    {/each}\n</div>\n\n\n<style>\n    div {\n        position: fixed;\n        top: 2rem;\n        right:2rem;\n        display: grid;\n        grid-template-columns: 1;\n    }\n\n    span {\n        display: block;\n        padding: 2rem;\n        border:1px solid #ccc;\n        margin-bottom: 1rem;\n        background-color: #eee;\n    }\n</style>\n\n","<!-- \n\tApp.svelte is the first svelte file the application loads.\n\tsvelte-spa-router handles navigation between different pages.\n\tThe pages are stored in src/routes as .svelte files.\n\tThey need to be added to the const routes in this file. Then they can be navigated to.\n-->\n\n<script lang=\"ts\">\n\timport Router from 'svelte-spa-router'\n\timport Home from \"./routes/Home.svelte\";\n\timport Options from \"./routes/Options.svelte\";\n\timport NotFound from './routes/NotFound.svelte';\nimport Notifications from './components/Notifications.svelte';\n\n\tconst routes = {\n\t\t'/': Home,\n\t\t'/options': Options,\n\n\t\t// Catch-all. This is optional, but if present it must be the last\n\t\t'*': NotFound,\n\t}\n</script>\n\n\n<div>\n\t<!-- This is the HTML section where the main navigation menu lives -->\n\t<ul>\n\t\t<li><a href=\"#/\">🏠 Home</a></li>\n\t\t<li><a href=\"#/options\">⚙️ Options</a></li>\n\t</ul>\n\n\t<!-- Add the Notifications component so messages appear on every page -->\n\t<Notifications></Notifications>\n\n\t<!-- Router handles displaying each individual page -->\n\t<Router {routes}/> \n</div>\n\n\n\n<!-- This is where CSS for the navigation menu can be defined -->\n<style>\n\n\tul {\n\t\tpadding:0;\n\t}\n\t\n\tli {\n\t\tdisplay:inline-block;\n\t}\n\n\ta {\n\t\ttext-decoration: none;\n\t\ttransition: all 0.5s;\n\t\tpadding:0.5rem;\n\t}\n\n\ta:hover {\n\t\tbackground-color: #fff;\n\t}\n\n\tdiv {\n\t\tmax-width: 100%;\n\t\tmargin:0 auto;\n\t}\n\n\t@media screen and (min-width: 992px) {\n\t\tdiv {\n\t\t\tmax-width: 80%;\n\t\t}\n\t}\n\n</style>","/*\r\n* This file is the main entrance point of the application.\r\n* It creates an instance of App.svelte and adds it to the body of the HTML document.\r\n*/\r\nimport App from './App.svelte';\r\nimport { startGameLoop } from './gamelogic/gameloop';\r\nconst app = new App({\r\n    target: document.body\r\n});\r\nstartGameLoop();\r\nexport default app;\r\n"],"names":["noop","identity","x","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","component_subscribe","component","callback","$$","on_destroy","push","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","Set","run_tasks","task","c","delete","f","size","loop","promise","Promise","fulfill","add","[object Object]","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","custom_event","type","detail","e","createEvent","initCustomEvent","active_docs","current_component","active","create_rule","duration","delay","ease","uid","step","keyframes","p","t","rule","str","hash","i","length","charCodeAt","doc","ownerDocument","stylesheet","__svelte_stylesheet","head","sheet","current_rules","__svelte_rules","insertRule","cssRules","animation","style","delete_rule","previous","split","next","filter","anim","indexOf","deleted","join","deleteRule","clear","add_transform","getBoundingClientRect","left","top","getComputedStyle","transform","set_current_component","get_current_component","Error","bubble","slice","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","resolve","update_scheduled","schedule_update","then","flush","add_render_callback","flushing","seen_callbacks","update","pop","has","fragment","before_update","dirty","ctx","after_update","dispatch","direction","kind","dispatchEvent","outroing","outros","group_outros","r","check_outros","transition_in","block","local","transition_out","o","d","null_transition","create_bidirectional_transition","params","intro","config","running_program","pending_program","animation_name","clear_animation","init","program","Math","abs","start","end","group","go","easing","tick","css","fix_and_outro_and_destroy_block","lookup","key","outro_and_destroy_block","get_spread_update","levels","updates","to_null_out","accounted_for","$$scope","n","undefined","get_spread_object","spread_props","create_component","mount_component","on_mount","m","new_on_destroy","map","destroy_component","detaching","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","context","Map","skip_bound","ready","ret","rest","fill","make_dirty","hydrate","nodes","Array","from","childNodes","children","l","SvelteComponent","this","$destroy","index","splice","$$props","obj","$$set","keys","subscriber_queue","readable","writable","stop","subscribers","set","new_value","run_queue","s","invalidate","subscriber","derived","stores","initial_value","single","isArray","stores_array","auto","inited","values","pending","cleanup","sync","result","unsubscribers","getLocation","hashPosition","location","href","substr","qsPosition","querystring","loc","$loc","routes","prefix","restoreScrollState","RouteItem","path","_sveltesparouter","charAt","RegExp","pattern","loose","tmp","ext","arr","shift","substring","regexparam","conditions","userData","_pattern","_keys","startsWith","match","matches","exec","out","decodeURIComponent","routesList","route","componentParams","call","createEventDispatcher","dispatchNextTick","previousScrollState","state","scrollY","scrollTo","scrollX","lastLoc","componentObj","newLoc","checkConditions","loading","loadingParams","loaded","default","history","scrollRestoration","thousand","million","billion","trillion","formatNumber","input","decimals","toExponential","replace","toFixed","formatWhole","LZString","String","fromCharCode","keyStrBase64","keyStrUriSafe","baseReverseDic","getBaseValue","alphabet","character","compressToBase64","res","_compress","decompressFromBase64","_decompress","compressToUTF16","decompressFromUTF16","compressed","compressToUint8Array","uncompressed","compress","buf","Uint8Array","TotalLen","current_value","decompressFromUint8Array","decompress","compressToEncodedURIComponent","decompressFromEncodedURIComponent","bitsPerChar","getCharFromInt","ii","context_dictionary","context_dictionaryToCreate","context_c","context_wc","context_w","context_enlargeIn","context_dictSize","context_numBits","context_data","context_data_val","context_data_position","prototype","hasOwnProperty","pow","resetValue","getNextValue","w","bits","resb","maxpower","power","dictionary","enlargeIn","dictSize","numBits","entry","val","position","module","storageName","loadSaveGame","localStorage","getItem","SaveData","saveData","JSON","parse","console","log","master","getOwnPropertyNames","prop","dataMigrate","error","saveSaveGame","lastSaved","setItem","stringify","money","upgradesBought","upgradesGenerated","GameModel","isNaN","gameModel","gameModelInstance","clickTheButton","times","addMoney","Generator","id","description","basePrice","multiplier","getBoughtCount","getGeneratedCount","spendMoney","getPrice","generatesId","generateTime","super","generated","deltaT","count","getTotalCount","generatedPerSecond","floor","generators","generator","purchase","ids","alert","iterations","messageQueue","idNumber","Message","message","sendMessage","notification","setTimeout","$gameModel","confirm","removeItem","g","cubicOut","sineInOut","cos","PI","fly","y","opacity","target_opacity","od","u","flip","scaleX","width","clientWidth","scaleY","height","clientHeight","dx","to","dy","sqrt","_t","right","bottom","start_time","running","started","old_blocks","get_key","dynamic","list","destroy","create_each_block","get_context","old_indexes","new_blocks","new_lookup","deltas","child_ctx","get","will_move","did_move","first","new_block","old_block","new_key","old_key","/","Home","/options","Options","*","NotFound","lastRunTime","gameLoop","currentTime","max","min","gameUpdate","app","body","moneyBefore","offlineDeltaT","calculateOfflineProgress","setInterval"],"mappings":"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"}